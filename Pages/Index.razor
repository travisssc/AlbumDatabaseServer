@page "/"
@using Microsoft.AspNetCore.Components.Authorization
@using AlbumDatabaseServer.Data
@inject AlbumService AlbumService
@inject AuthenticationStateProvider AuthenticationStateProvider
@using AlbumDatabaseServer.Components

<PageTitle> Home</PageTitle>
<MudContainer>
	<MudStack Class="pa-16 mt-2 rounded-lg" Style="background: linear-gradient(to bottom, #212121, #121212)">
		<MudGrid>
			<MudSpacer />
			<MudText>
				@if (isUserLoggedIn)
				{
					<h1>Welcome back,
						<a class="username-text" href="profile/home">@username!</a>
					</h1>
				}
				else
				{
					<h1>Welcome! Please
						<a href="Identity/Account/Login">log in</a>
						or
						<a href="Identity/Account/Register">register</a>
					</h1>
				}
			</MudText>
			<MudSpacer />
		</MudGrid>
		<h2 class="pt-16 pb-4">New Releases</h2> 
		@if (newAlbums == null)
		{
			<MudText>Loading...</MudText>
		}
		else if (!newAlbums.Any())
		{
			<MudText>No new releases, check back later!</MudText>
		}
		else
		{
			<Carousel Albums="newAlbums" />
		}
		<div class="video-container">
			<h2 class="pt-16 pb-4">Artist Spotlight</h2>
			<div id="youtube-video"></div>
		</div>
	</MudStack>
</MudContainer>

@code {
	private bool isUserLoggedIn;
	private string username;
	private List<Album> newAlbums;
	protected override async Task OnInitializedAsync()
	{
		var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
		var user = authState.User;
		isUserLoggedIn = user.Identity.IsAuthenticated;
		if (isUserLoggedIn)
		{
			username = user.Identity.Name;
		}
		newAlbums = await Task.Run(() => AlbumService.GetNewReleases());
	}
}


