@page "/"
@using Microsoft.AspNetCore.Components.Authorization
@using AlbumDatabaseServer.Data
@inject AlbumService AlbumService
@inject AuthenticationStateProvider AuthenticationStateProvider
@using AlbumDatabaseServer.Components

<PageTitle>Index</PageTitle>
<MudContainer>
	<MudStack Class="pa-16">
		<MudGrid>
			<MudSpacer/>
			
			<MudText>
				@if (isUserLoggedIn)
				{
					<h1>Welcome back @username!</h1>
				}
				else
				{
					<h1>Welcome! Please log in or register</h1>
				}
			</MudText>
			<MudSpacer/>
		</MudGrid>
		<MudText Class="pt-16">New releases</MudText>
			<MudGrid Justify="Justify.Center" Class="pa-6">
				@if (newAlbums == null)
				{
					<MudText>Loading...</MudText>
				}
				else if (!newAlbums.Any())
				{
					<MudText>No new releases, check back later!</MudText>
				}
				else
				{
					@foreach (var album in newAlbums)
					{
						<MudItem>
							<AlbumComponent Album="@album" />
						</MudItem>
					}
				}
			</MudGrid>
	</MudStack>
</MudContainer>

@code {
	private bool isUserLoggedIn;
	private string username;
	private List<Album> newAlbums;
	protected override async Task OnInitializedAsync()
	{
		var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
		var user = authState.User;
		isUserLoggedIn = user.Identity.IsAuthenticated;
		if (isUserLoggedIn)
		{
			username = user.Identity.Name;
		}
		newAlbums = await Task.Run(() => AlbumService.GetNewReleases());
	}
}


